C:\Users\AkshatSharma\Documents\GitHub\kubernetes_setup>
C:\Users\AkshatSharma\Documents\GitHub\kubernetes_setup>vagrant status
Current machine states:

kubemaster                not created (virtualbox)
kubenode01                not created (virtualbox)
kubenode02                not created (virtualbox)

This environment represents multiple VMs. The VMs are all listed
above with their current state. For more information about a specific
VM, run `vagrant status NAME`.

C:\Users\AkshatSharma\Documents\GitHub\kubernetes_setup>vagrant up
Bringing machine 'kubemaster' up with 'virtualbox' provider...
Bringing machine 'kubenode01' up with 'virtualbox' provider...
Bringing machine 'kubenode02' up with 'virtualbox' provider...
==> kubemaster: Importing base box 'ubuntu/bionic64'...
==> kubemaster: Matching MAC address for NAT networking...
==> kubemaster: Setting the name of the VM: kubemaster
==> kubemaster: Clearing any previously set network interfaces...
==> kubemaster: Preparing network interfaces based on configuration...
    kubemaster: Adapter 1: nat
    kubemaster: Adapter 2: hostonly
==> kubemaster: Forwarding ports...
    kubemaster: 22 (guest) => 2711 (host) (adapter 1)
    kubemaster: 22 (guest) => 2222 (host) (adapter 1)
==> kubemaster: Running 'pre-boot' VM customizations...
==> kubemaster: Booting VM...
==> kubemaster: Waiting for machine to boot. This may take a few minutes...
    kubemaster: SSH address: 127.0.0.1:2222
    kubemaster: SSH username: vagrant
    kubemaster: SSH auth method: private key
    kubemaster: Warning: Connection reset. Retrying...
    kubemaster: Warning: Connection aborted. Retrying...
    kubemaster:
    kubemaster: Vagrant insecure key detected. Vagrant will automatically replace
    kubemaster: this with a newly generated keypair for better security.
    kubemaster:
    kubemaster: Inserting generated public key within guest...
    kubemaster: Removing insecure key from the guest if it's present...
    kubemaster: Key inserted! Disconnecting and reconnecting using new SSH key...
==> kubemaster: Machine booted and ready!
==> kubemaster: Checking for guest additions in VM...
    kubemaster: The guest additions on this VM do not match the installed version of
    kubemaster: VirtualBox! In most cases this is fine, but in rare cases it can
    kubemaster: prevent things such as shared folders from working properly. If you see
    kubemaster: shared folder errors, please make sure the guest additions within the
    kubemaster: virtual machine match the version of VirtualBox you have installed on
    kubemaster: your host and reload your VM.
    kubemaster:
    kubemaster: Guest Additions Version: 5.2.42
    kubemaster: VirtualBox Version: 7.0
==> kubemaster: Setting hostname...
==> kubemaster: Configuring and enabling network interfaces...
==> kubemaster: Mounting shared folders...
    kubemaster: /vagrant => C:/Users/AkshatSharma/Documents/GitHub/kubernetes_setup
==> kubemaster: Running provisioner: setup-hosts (shell)...
    kubemaster: Running: C:/Users/AKSHAT~1/AppData/Local/Temp/vagrant-shell20231214-21660-4gzr6d.sh
==> kubemaster: Running provisioner: setup-dns (shell)...
    kubemaster: Running: C:/Users/AKSHAT~1/AppData/Local/Temp/vagrant-shell20231214-21660-1ysrhan.sh
==> kubenode01: Importing base box 'ubuntu/bionic64'...
==> kubenode01: Matching MAC address for NAT networking...
==> kubenode01: Setting the name of the VM: kubenode01
==> kubenode01: Fixed port collision for 22 => 2222. Now on port 2200.
==> kubenode01: Clearing any previously set network interfaces...
==> kubenode01: Preparing network interfaces based on configuration...
    kubenode01: Adapter 1: nat
    kubenode01: Adapter 2: hostonly
==> kubenode01: Forwarding ports...
    kubenode01: 22 (guest) => 2721 (host) (adapter 1)
    kubenode01: 22 (guest) => 2200 (host) (adapter 1)
==> kubenode01: Running 'pre-boot' VM customizations...
==> kubenode01: Booting VM...
==> kubenode01: Waiting for machine to boot. This may take a few minutes...
    kubenode01: SSH address: 127.0.0.1:2200
    kubenode01: SSH username: vagrant
    kubenode01: SSH auth method: private key
    kubenode01:
    kubenode01: Vagrant insecure key detected. Vagrant will automatically replace
    kubenode01: this with a newly generated keypair for better security.
    kubenode01:
    kubenode01: Inserting generated public key within guest...
    kubenode01: Removing insecure key from the guest if it's present...
    kubenode01: Key inserted! Disconnecting and reconnecting using new SSH key...
==> kubenode01: Machine booted and ready!
==> kubenode01: Checking for guest additions in VM...
    kubenode01: The guest additions on this VM do not match the installed version of
    kubenode01: VirtualBox! In most cases this is fine, but in rare cases it can
    kubenode01: prevent things such as shared folders from working properly. If you see
    kubenode01: shared folder errors, please make sure the guest additions within the
    kubenode01: virtual machine match the version of VirtualBox you have installed on
    kubenode01: your host and reload your VM.
    kubenode01:
    kubenode01: Guest Additions Version: 5.2.42
    kubenode01: VirtualBox Version: 7.0
==> kubenode01: Setting hostname...
==> kubenode01: Configuring and enabling network interfaces...
==> kubenode01: Mounting shared folders...
    kubenode01: /vagrant => C:/Users/AkshatSharma/Documents/GitHub/kubernetes_setup
==> kubenode01: Running provisioner: setup-hosts (shell)...
    kubenode01: Running: C:/Users/AKSHAT~1/AppData/Local/Temp/vagrant-shell20231214-21660-1aye1p0.sh
==> kubenode01: Running provisioner: setup-dns (shell)...
    kubenode01: Running: C:/Users/AKSHAT~1/AppData/Local/Temp/vagrant-shell20231214-21660-1qth3lz.sh
==> kubenode02: Importing base box 'ubuntu/bionic64'...
==> kubenode02: Matching MAC address for NAT networking...
==> kubenode02: Setting the name of the VM: kubenode02
==> kubenode02: Fixed port collision for 22 => 2222. Now on port 2201.
==> kubenode02: Clearing any previously set network interfaces...
==> kubenode02: Preparing network interfaces based on configuration...
    kubenode02: Adapter 1: nat
    kubenode02: Adapter 2: hostonly
==> kubenode02: Forwarding ports...
    kubenode02: 22 (guest) => 2722 (host) (adapter 1)
    kubenode02: 22 (guest) => 2201 (host) (adapter 1)
==> kubenode02: Running 'pre-boot' VM customizations...
==> kubenode02: Booting VM...
==> kubenode02: Waiting for machine to boot. This may take a few minutes...
    kubenode02: SSH address: 127.0.0.1:2201
    kubenode02: SSH username: vagrant
    kubenode02: SSH auth method: private key
    kubenode02:
    kubenode02: Vagrant insecure key detected. Vagrant will automatically replace
    kubenode02: this with a newly generated keypair for better security.
    kubenode02:
    kubenode02: Inserting generated public key within guest...
    kubenode02: Removing insecure key from the guest if it's present...
    kubenode02: Key inserted! Disconnecting and reconnecting using new SSH key...
==> kubenode02: Machine booted and ready!
==> kubenode02: Checking for guest additions in VM...
    kubenode02: The guest additions on this VM do not match the installed version of
    kubenode02: VirtualBox! In most cases this is fine, but in rare cases it can
    kubenode02: prevent things such as shared folders from working properly. If you see
    kubenode02: shared folder errors, please make sure the guest additions within the
    kubenode02: virtual machine match the version of VirtualBox you have installed on
    kubenode02: your host and reload your VM.
    kubenode02:
    kubenode02: Guest Additions Version: 5.2.42
    kubenode02: VirtualBox Version: 7.0
==> kubenode02: Setting hostname...
==> kubenode02: Configuring and enabling network interfaces...
==> kubenode02: Mounting shared folders...
    kubenode02: /vagrant => C:/Users/AkshatSharma/Documents/GitHub/kubernetes_setup
==> kubenode02: Running provisioner: setup-hosts (shell)...
    kubenode02: Running: C:/Users/AKSHAT~1/AppData/Local/Temp/vagrant-shell20231214-21660-5i2252.sh
==> kubenode02: Running provisioner: setup-dns (shell)...
    kubenode02: Running: C:/Users/AKSHAT~1/AppData/Local/Temp/vagrant-shell20231214-21660-8nyt8z.sh

C:\Users\AkshatSharma\Documents\GitHub\kubernetes_setup>
C:\Users\AkshatSharma\Documents\GitHub\kubernetes_setup>
C:\Users\AkshatSharma\Documents\GitHub\kubernetes_setup>vagrant status
Current machine states:

kubemaster                running (virtualbox)
kubenode01                running (virtualbox)
kubenode02                running (virtualbox)

This environment represents multiple VMs. The VMs are all listed
above with their current state. For more information about a specific
VM, run `vagrant status NAME`.

C:\Users\AkshatSharma\Documents\GitHub\kubernetes_setup>vagrant ssh kubemaster
Welcome to Ubuntu 18.04.6 LTS (GNU/Linux 4.15.0-210-generic x86_64)

 * Documentation:  https://help.ubuntu.com
 * Management:     https://landscape.canonical.com
 * Support:        https://ubuntu.com/advantage

  System information as of Thu Dec 14 12:18:51 UTC 2023

  System load:  0.09              Processes:             99
  Usage of /:   2.9% of 38.70GB   Users logged in:       0
  Memory usage: 6%                IP address for enp0s3: 10.0.2.15
  Swap usage:   0%                IP address for enp0s8: 192.168.56.2


Expanded Security Maintenance for Applications is not enabled.

0 updates can be applied immediately.

Enable ESM Apps to receive additional future security updates.
See https://ubuntu.com/esm or run: sudo pro status

New release '20.04.6 LTS' available.
Run 'do-release-upgrade' to upgrade to it.


vagrant@kubemaster:~$
vagrant@kubemaster:~$
vagrant@kubemaster:~$
vagrant@kubemaster:~$ ls -ltr
total 0
vagrant@kubemaster:~$
